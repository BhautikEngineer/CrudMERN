{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhautik\\\\Desktop\\\\MERN\\\\Crud\\\\frontend\\\\src\\\\components\\\\TodoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = _ref => {\n  _s();\n  let {\n    todo,\n    deleteTodo,\n    updateTodo\n  } = _ref;\n  const [editMode, setEditMode] = useState(false);\n  const [updatedText, setUpdatedText] = useState(todo.text);\n  const [checked, setChecked] = useState(todo.completed);\n  const handleDelete = () => {\n    deleteTodo(todo._id);\n  };\n  const handleUpdate = () => {\n    updateTodo(todo._id, updatedText);\n    setEditMode(false);\n  };\n  const handleInputChange = e => {\n    setUpdatedText(e.target.value);\n  };\n  const handleCheck = () => {\n    const updatedTodo = {\n      ...todo,\n      completed: !checked\n    };\n    updateTodo(todo._id, updatedText); // Pass updatedText instead of updatedTodo\n    setChecked(!checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: checked,\n      onChange: handleCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: updatedText,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `todo-text ${checked ? 'completed' : ''}`,\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: editMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-button\",\n        onClick: handleUpdate,\n        children: \"\\u2713 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => setEditMode(true),\n          children: \"\\u270F\\uFE0F \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: handleDelete,\n          children: \"\\u2716 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"tbFzKf+SHLuJ41dmBKIMrk0ncxk=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_ref","_s","todo","deleteTodo","updateTodo","editMode","setEditMode","updatedText","setUpdatedText","text","checked","setChecked","completed","handleDelete","_id","handleUpdate","handleInputChange","e","target","value","handleCheck","updatedTodo","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Bhautik/Desktop/MERN/Crud/frontend/src/components/TodoItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TodoItem = ({ todo, deleteTodo, updateTodo }) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [updatedText, setUpdatedText] = useState(todo.text);\r\n  const [checked, setChecked] = useState(todo.completed);\r\n\r\n  const handleDelete = () => {\r\n    deleteTodo(todo._id);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    updateTodo(todo._id, updatedText);\r\n    setEditMode(false);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setUpdatedText(e.target.value);\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    const updatedTodo = { ...todo, completed: !checked };\r\n    updateTodo(todo._id, updatedText); // Pass updatedText instead of updatedTodo\r\n    setChecked(!checked);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <input type=\"checkbox\" checked={checked} onChange={handleCheck} />\r\n      \r\n      {editMode ? (\r\n        <input\r\n          type=\"text\"\r\n          value={updatedText}\r\n          onChange={handleInputChange}\r\n        />\r\n      ) : (\r\n        <span className={`todo-text ${checked ? 'completed' : ''}`}>\r\n          {todo.text}\r\n        </span>\r\n      )}\r\n\r\n      <div>\r\n        {editMode ? (\r\n          <button className=\"update-button\" onClick={handleUpdate}>\r\n            &#x2713; {/* Unicode symbol for checkmark */}\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <button className=\"edit-button\" onClick={() => setEditMode(true)}>\r\n              ✏️ {/* Unicode symbol for pencil */}\r\n            </button>\r\n            <button className=\"delete-button\" onClick={handleDelete}>\r\n              &#x2716; {/* Unicode symbol for cross */}\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,QAAQ,GAAGC,IAAA,IAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAAJ,IAAA;EAChD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACQ,IAAI,CAACO,IAAI,CAAC;EACzD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAACQ,IAAI,CAACU,SAAS,CAAC;EAEtD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBV,UAAU,CAACD,IAAI,CAACY,GAAG,CAAC;EACtB,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBX,UAAU,CAACF,IAAI,CAACY,GAAG,EAAEP,WAAW,CAAC;IACjCD,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/BT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,WAAW,GAAG;MAAE,GAAGnB,IAAI;MAAEU,SAAS,EAAE,CAACF;IAAQ,CAAC;IACpDN,UAAU,CAACF,IAAI,CAACY,GAAG,EAAEP,WAAW,CAAC,CAAC,CAAC;IACnCI,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAGD,oBACEd,OAAA;IAAK0B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB3B,OAAA;MAAO4B,IAAI,EAAC,UAAU;MAACd,OAAO,EAAEA,OAAQ;MAACe,QAAQ,EAAEL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEjExB,QAAQ,gBACPT,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXL,KAAK,EAAEZ,WAAY;MACnBkB,QAAQ,EAAET;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,gBAEFjC,OAAA;MAAM0B,SAAS,EAAG,aAAYZ,OAAO,GAAG,WAAW,GAAG,EAAG,EAAE;MAAAa,QAAA,EACxDrB,IAAI,CAACO;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACP,eAEDjC,OAAA;MAAA2B,QAAA,EACGlB,QAAQ,gBACPT,OAAA;QAAQ0B,SAAS,EAAC,eAAe;QAACQ,OAAO,EAAEf,YAAa;QAAAQ,QAAA,EAAC;MAC9C;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAETjC,OAAA,CAAAE,SAAA;QAAAyB,QAAA,gBACE3B,OAAA;UAAQ0B,SAAS,EAAC,aAAa;UAACQ,OAAO,EAAEA,CAAA,KAAMxB,WAAW,CAAC,IAAI,CAAE;UAAAiB,QAAA,EAAC;QAC7D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACTjC,OAAA;UAAQ0B,SAAS,EAAC,eAAe;UAACQ,OAAO,EAAEjB,YAAa;UAAAU,QAAA,EAAC;QAC9C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,eACT;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3DIF,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}